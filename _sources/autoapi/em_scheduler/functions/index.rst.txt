:py:mod:`em_scheduler.functions`
================================

.. py:module:: em_scheduler.functions

.. autoapi-nested-parse::

   Scheduler Event Logging.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   em_scheduler.functions.scheduler_delete_all_tasks
   em_scheduler.functions.scheduler_delete_task
   em_scheduler.functions.scheduler_task_runner
   em_scheduler.functions.scheduler_add_task



.. py:function:: scheduler_delete_all_tasks()

   Delete all jobs associated with a task from the scheduler.

   :returns: true


.. py:function:: scheduler_delete_task(task_id)

   Delete all jobs associated with a task from the scheduler.

   :param task_id: id of task to delete associated jobs
   :returns: true


.. py:function:: scheduler_task_runner(task_id)

   Send request to runner api to run task.

   :param task_id: id of task to run


.. py:function:: scheduler_add_task(task_id)

   Create job for task in the scheduler.

   :param task_id: id of task to create a schedule for

   *Parameters for APScheduler*

   :func: function to run
   :trigger: date, interval or cron
   :id: used to match job up to db
   :name: desc of job
   :misfire_grace_time: seconds a job can run late
   :coalesce: merge mul into one run
   :max_instances: max concurrent runs allowed
   :next_run_time: when to start schedule (None: job paused)
   :jobstore: alias of jobstore to use
   :executor: alias of excutor to use
   :replace_existing: true to replace jobs with same id

   *Parameters for Cron Jobs*

   :year: 4 digit year
   :month: 1-12
   :day: 1-31
   :week: 1-53
   :day_of_week: 0-6 or mon,tue,wed,thu,fri,sat,sun
   :hour: 0-23
   :minute: 0-59
   :second: 0-59
   :start_date: (datetime) soonest start
   :end_date: (datetime) latest run

   *Paramters for Interval Jobs*

   :weeks: (int) number of weeks between runs
   :days: (int) number of days between runs
   :hours: (int) number of hours between runs
   :minutes: (int) number of minutes between runs
   :seconds: (int) number of seconds between runs
   :start_date: (datetime) soonest start date
   :end_date: (datetime) latest run date

   *Parameters for One Off Jobs*

   :run_date: (datetime) when to run

   *Notes*

   If multiple triggers are specified on the task a schedule will be added for each trigger
   type. So it is possible to have multiple triggers per task. Because of this, the id
   assigned to the job is project_id-task_id-<time hash>. The tasks id is sent as an arg
   to the job.



