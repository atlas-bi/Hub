[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool]

[tool.black]
exclude = '''
    /(
        \.git
      | \.hg
      | \.mypy_cache
      | \.tox
      | \.venv
      | _build
      | buck-out
      | build
      | dist

      # The following are specific to Black, you probably don't want those.
      | blib2to3
      | tests/data

      # em2
      | migrations
      | migrations_dev
      | temp
      | node_modules
    )/
    '''
line-length = 99

[tool.isort]
profile = "black"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
skip_glob = ["runner/temp/*"]

[tool.mypy]
disable_error_code = "attr-defined, name-defined"
disallow_untyped_calls = true
disallow_untyped_defs = true
exclude = "/(temp|tests)/$"
ignore_missing_imports = true

[[tool.mypy.overrides]]
ignore_errors = true
module = "*.smb_fix"

[[tool.mypy.overrides]]
ignore_errors = true
module = "*.ldap_auth"

[tool.poetry]
authors = [
  "Paula Courville",
  "Darrel Drake",
  "Dee Anna Hillebrand",
  "Scott Manley",
  "Madeline Matz",
  "Christopher Pickering <cpickering@rhc.net>",
  "Dan Ryan",
  "Richard Schissler",
  "Eric Shultz",
  "Payton Snider III"
]
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Operating System :: OS Independent",
  "Development Status :: 5 - Production/Stable",
  "Framework :: Flask",
  "Intended Audience :: Healthcare Industry",
  "Natural Language :: English"
]
description = "Atlas Automation Hub is a task scheduling tool for moving data."
documentation = "https://www.atlas.bi/docs/hub/"
homepage = "https://atlas-hub.atlas.bi"
keywords = [
  "Atlas Automation Hub",
  "flask-apscheduler",
  "flask",
  "apscheduler",
  "scheduling"
]
license = "GPL-3.0-or-later"
maintainers = ["Christopher Pickering <cpickering@rhc.net>"]
name = "atlas-hub"
packages = [
  {include = "web"},
  {include = "scheduler"},
  {include = "runner"}
]
readme = "readme.md"
repository = "https://github.com/atlas-bi/Hub"
version = "3.0.0"

[tool.poetry.dependencies]
Flask = "^3.0.3"
Flask-APScheduler = "^1.13.1"
Flask-Assets = "^2.1.0"
Flask-Caching = "^2.3.0"
Flask-Compress = "1.15"
Flask-Executor = "^1.0.0"
Flask-HTMLmin = "^2.2.1"
Flask-Login = "^0.6.3"
Flask-Migrate = "^4.0.7"
Flask-SQLAlchemy = "^3.1.1"
Flask-Script = "^2.0.6"
Jinja2 = "^3.1.4"
SQLAlchemy = "^2.0.34"
SQLAlchemy-Utils = "^0.41.2"
azure-devops = "^7.1.0b4"
bs4 = "^0.0.2"
cryptography = "^43.0.1"
flask-redis = "^0.4.0"
flask-session = "^0.8.0"
gevent = "^24.2.1"
gunicorn = "^23.0.0"
is-safe-url = "^1.0"
jaydebeapi = "^1.2.3"
paramiko = "^3.5.0"
pathvalidate = "^3.2.0"
psutil = "^6.0.0"
psycopg2-binary = "^2.9.9"
pyodbc = "^5.1.0"
pysaml2 = "^7.5.0"
pysmb = "^1.2.9.1"
python = ">=3.10.0,<4.0"
python-dateutil = "^2.9.0"
python-gnupg = "^0.5.2"
python-ldap = "3.4.4"
python3-saml = "^1.16.0"
pytz-deprecation-shim = "^0.1.0"
rcssmin = "^1.1.2"
redis = "^5.0.9"
regex = "^2024.9.11"
relative-to-now = "^1.0.0"
requests = "^2.32.3"
setuptools = "^72.2.0"
supervisor = "^4.2.5"
tomli = "^2.0.1"
tomlkit = "^0.13.2"
virtualenv = "^20.26.4"
webassets-rollup = "^1.0.0"
whitenoise = "^6.7.0"
xmlsec = "^1.3.14"

[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
coverage = "^7.6.1"
flask-debugtoolbar = "^0.15.1"
isort = "^5.13.2"
mypy = "1.11.1"
pre-commit = "^3.8.0"
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
radon = "^6.0.1"
ruff = "^0.6.5"
toml = "^0.10.2"
tox = "^4.18.1"
types-paramiko = "^3.4.0.20240423"
types-python-dateutil = "^2.9.0.20240906"
types-requests = "^2.32.0.20240914"

[tool.pytest]

[tool.pytest.ini_options]
addopts = "-rsx --tb=short"
filterwarnings = "always"
testpaths = "tests"

[tool.ruff]
extend-exclude = ['test*', 'ldap_auth*', 'migrations*']

[tool.ruff.lint]
ignore = ['RUF015', 'B034', 'PLR1714', 'S602', 'S605', 'D213', 'S324', 'D203', 'S301', 'N818', 'PLW0120', 'PLR0915', 'S110', 'S101', 'C417', 'PLR0913', 'D212', 'RUF100', 'B020', 'S106', 'PLC1901', 'PLR0911', 'F401', "E501", 'SIM118', 'PLR2004', 'PLW2901', 'B905', 'E402', 'PLR0912', 'B904', 'ERA001', 'PLR5501', 'D401', 'SIM108', 'S507']
select = ['F', 'E', 'W', 'N', 'D', 'S', 'B', 'C4', 'T20', 'Q', 'SIM', 'ERA', 'PL', 'RUF']

[tool.ruff.lint.per-file-ignores]
"runner/scripts/em_python.py" = ['SIM114']

[tool.setuptools_scm]
local_scheme = "dirty-tag"
version_scheme = "post-release"
